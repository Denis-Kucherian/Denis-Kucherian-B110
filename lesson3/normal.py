# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
my_list: int = [2, -5, 8, 9, -25, 25, 4] #задан произвольный список
print("Ваш список: ", my_list)
new_list = [] # задан пустой новый список
for i in my_list: # проходим по значениям списка
    if i >= 0:
        if int(math.sqrt(i)) == math.sqrt(i): # если корень элемента списка целый - то:
            print("Корень из ", i, "=", math.sqrt(i))
            new_list.append(int(math.sqrt(i))) # добавляем значение целого корня в новый список
        else:
            print("Корень из ", i, "=", math.sqrt(i)) # если корень дробный
    else:
        print("Корня из числа ", i, "не существует") # если элемент исходного списка отрицательный
print("Новый список: ", new_list, "\n")

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

date = input("Введите даеу в формате ДД.ММ.ГГГГ: ")
date_list = [date[0:2], date[3:5],date[6:10]] # преобразуем в список из строк без точек, смотрим результат для наглядности:
# потом нашарил метод split, полезная штука, но пока пусть вручную
months = {
    '01': 'января',
    '02': 'февраля',
    '03': 'марта',
    '04': 'апреля',
    '05': 'мая',
    '06': 'июня',
    '07': 'июля',
    '08': 'августа',
    '09': 'сентября',
    '10': 'октября',
    '11': 'ноября',
    '12': 'декабря',
} # задаём словарь соответствия номера месяца и его текстового значения
days = {
    '01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвёртое', '05': 'пятое',
    '06': 'шестое', '07': 'седьмое', '08': 'восьмое', '09': 'девятое', '10': 'десятое',
    '11': 'одиннадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
    '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое',
    '21': 'двадцать первое', '22': 'двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвёртое',
    '25': 'двадцать пятое', '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое',
    '29': 'двадцать девятое', '30': 'тридцатое', '31': 'тридцать первое',
} # задаём словарь соответствия номера дня и его текстового значения
for i in days:                  # присваиваем наименование дня по его значению
    if date_list[0] == i:
        date_list[0] = days[i]
for i in months:                  # присваиваем наименование месяца по его значению
    if date_list[1] == i:
        date_list[1] = months[i]
print("Ваша дата в текстовом виде: ", date_list[0], date_list[1], date_list[2], "года\n")

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
n = int(input("введите количество целых чисел в списке: "))
random_list = []
for i in range (n):
    random_list.append(int(random.randint(-100, 100))) # заполняем список случайными целыми от -100 до 100
print("Ваш список: ", random_list, "\n")

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

# a)
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = set(lst) # преобразуем список в множество из неповторяемых элементов
lst2 = list(lst2) # обратно в список
print(lst2)


# б)
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = []
for i in lst:
    if lst.count(i) == 1: # если элемент списка в одном экземпляре, то добавляем в новый список
        lst2.append(i)
print(lst2)
